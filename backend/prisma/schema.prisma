generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Utilisateur {
  id           Int         @id @default(autoincrement())
  nom          String
  email        String      @unique
  motDePasse   String
  role         Role        @default(EMPLOYE)
  actif        Boolean     @default(true)
  createdAt    DateTime    @default(now())
  entrepriseId Int?
  updatedAt    DateTime    @updatedAt
  entreprise   Entreprise? @relation(fields: [entrepriseId], references: [id])
  createdEntreprises Entreprise[] @relation("EntrepriseCreatedBy")

  @@index([entrepriseId], map: "Utilisateur_entrepriseId_fkey")
}

model Entreprise {
  id           Int           @id @default(autoincrement())
  nom          String
  logo         String?
  adresse      String
  devise       String        @default("XOF")
  typePeriode  TypePeriode   @default(MENSUELLE)
  createdById  Int?
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt
  employes     Employe[]
  utilisateurs Utilisateur[]
  createdBy    Utilisateur?  @relation("EntrepriseCreatedBy", fields: [createdById], references: [id])
}

model Employe {
  id                   Int         @id @default(autoincrement())
  nomComplet           String
  poste                String
  typeContrat          TypeContrat
  tauxSalaire          Float
  coordonneesBancaires String?
  actif                Boolean     @default(true)
  entrepriseId         Int
  createdAt            DateTime    @default(now())
  updatedAt            DateTime    @updatedAt
  entreprise           Entreprise  @relation(fields: [entrepriseId], references: [id], onDelete: Cascade)

  @@index([entrepriseId], map: "Employe_entrepriseId_fkey")
}

enum Role {
  SUPER_ADMIN
  ADMIN
  CAISSIER
  EMPLOYE
}

enum TypePeriode {
  MENSUELLE
  HEBDOMADAIRE
  JOURNALIERE
}

enum TypeContrat {
  JOURNALIER
  FIXE
  HONORAIRE
}
